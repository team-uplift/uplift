openapi: 3.0.3
info:
  title: upLift Orchestrator - OpenAPI 3.0
  description: |-
    This is the upLift's Orchestrator API that enables the UI to interact with our complex back end functionality to facilite key behaviors. 
    
    Some useful links:
    - [The Orchestrator repository](https://github.com/team-uplift/uplift)
  termsOfService: http://swagger.io/terms/
  contact:
    email: todo@todo.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://todo.todo
servers:
  - url: https://todo.com
tags:
  - name: Recipient
    description: Everything about your Recipients
    externalDocs:
      description: Find out more
      url: http://todo.todo
  - name: Donor
    description: Everything about your Donors
    externalDocs:
      description: Find out more
      url: http://todo.todo
  - name: Donations
    description: Everything about your Donors
    externalDocs:
      description: Find out more
      url: http://todo.todo
paths:
  /donations:
    get:
      summary: Get all donations
      description: Retrieves a list of all donation transactions.
      tags:
        - Donations
      parameters:
        - name: session_id
          in: header
          description: 'Tracks the session for the given set of requests.'
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A list of donations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Donation'
        "500":
          description: Server error

    post:
      summary: Create a new donation
      description: Adds a new donation transaction.
      tags:
        - Donations
      parameters:
        - name: session_id
          in: header
          description: 'Tracks the session for the given set of requests.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Donation'
      responses:
        "201":
          description: Donation successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Donation'
        "400":
          description: Invalid request data
        "500":
          description: Server error
  /donations/{id}:
    get:
      summary: Get a donation by ID
      description: Retrieves a specific donation transaction by its ID.
      tags:
        - Donations
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: session_id
          in: header
          description: 'Tracks the session for the given set of requests.'
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Donation details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Donation'
        "404":
          description: Donation not found
        "500":
          description: Server error
  /recipients:
    put:
      tags:
        - Recipient
      summary: Update an existing recipient
      description: Update an existing recipient by Id
      operationId: updateRecipient
      parameters:
        - name: session_id
          in: header
          description: 'Tracks the session for the given set of requests.'
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent recipient in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipient'
          application/xml:
            schema:
              $ref: '#/components/schemas/Recipient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Recipient'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipient'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Recipient'
        '400':
          description: Invalid ID supplied
        '404':
          description: Recipient not found
        '422':
          description: Validation exception
      security:
        - userstore_auth:
            - write:recipients
            - read:recipients
    post:
      tags:
        - Recipient
      summary: Add a new recipient to the store
      description: Add a new recipient to the store
      operationId: addRecipient
      parameters:
        - name: session_id
          in: header
          description: 'Tracks the session for the given set of requests.'
          required: true
          schema:
            type: string
      requestBody:
        description: Create a new recipient in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipient'
          application/xml:
            schema:
              $ref: '#/components/schemas/Recipient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Recipient'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipient'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Recipient'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
      security:
        - userstore_auth:
            - write:recipients
            - read:recipients
  /recipients/findByTags:
    get:
      tags:
        - Recipient
      summary: Finds Recipients by tags
      description: Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.
      operationId: findRecipientsByTags
      parameters:
        - name: tags
          in: query
          description: Tags to filter by
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: session_id
          in: header
          description: 'Tracks the session for the given set of requests.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipient'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipient'
        '400':
          description: Invalid tag value
      security:
        - userstore_auth:
            - write:recipients
            - read:recipients
  /recipients/{recipientId}:
    get:
      tags:
        - Recipient
      summary: Find recipient by ID
      description: Returns a single recipient
      operationId: getRecipientById
      parameters:
        - name: recipientId
          in: path
          description: ID of recipient to return
          required: true
          schema:
            type: integer
            format: int64
        - name: session_id
          in: header
          description: 'Tracks the session for the given set of requests.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipient'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Recipient'
        '400':
          description: Invalid ID supplied
        '404':
          description: Recipient not found
      security:
        - api_key: []
        - userstore_auth:
            - write:recipients
            - read:recipients
    post:
      tags:
        - Recipient
      summary: Updates a recipient in the store with form data
      description: ''
      operationId: updateRecipientWithForm
      parameters:
        - name: recipientId
          in: path
          description: ID of recipient that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Name of recipient that needs to be updated
          schema:
            type: string
        - name: status
          in: query
          description: Status of recipient that needs to be updated
          schema:
            type: string
        - name: session_id
          in: header
          description: 'Tracks the session for the given set of requests.'
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid input
      security:
        - userstore_auth:
            - write:recipients
            - read:recipients
    delete:
      tags:
        - Recipient
      summary: Deletes a recipient
      description: delete a recipient
      operationId: deleteRecipient
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: recipientId
          in: path
          description: Recipient id to delete
          required: true
          schema:
            type: integer
            format: int64
        - name: session_id
          in: header
          description: 'Tracks the session for the given set of requests.'
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid recipient value
      security:
        - userstore_auth:
            - write:recipients
            - read:recipients
  /recipients/tagGeneration/{recipientId}:
    post:
      tags:
        - Recipient
      summary: Updates a recipient's tags with form data
      description: ''
      operationId: updateRecipientTags
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: recipientId
          in: path
          description: Recipient id to generate tags for
          required: true
          schema:
            type: integer
            format: int64
        - name: query_text
          in: query
          description: A combined set of text or paragraph detailing the description to be used for tag generation
          schema:
            type: string
        - name: session_id
          in: header
          description: 'Tracks the session for the given set of requests.'
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid input
        '201':
          description: Created
  /donors:
    put:
      tags:
        - Donor
      summary: Update an existing recipient
      description: Update an existing recipient by Id
      operationId: updateDonor
      parameters:
        - name: session_id
          in: header
          description: 'Tracks the session for the given set of requests.'
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent donor in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipient'
          application/xml:
            schema:
              $ref: '#/components/schemas/Recipient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Recipient'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipient'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Recipient'
        '400':
          description: Invalid ID supplied
        '404':
          description: Recipient not found
        '422':
          description: Validation exception
      security:
        - userstore_auth:
            - write:recipients
            - read:recipients
    post:
      tags:
        - Donor
      summary: Add a new recipient to the store
      description: Add a new recipient to the store
      operationId: addDonor
      parameters:
        - name: session_id
          in: header
          description: 'Tracks the session for the given set of requests.'
          required: true
          schema:
            type: string
      requestBody:
        description: Create a new recipient in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipient'
          application/xml:
            schema:
              $ref: '#/components/schemas/Recipient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Recipient'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipient'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Recipient'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
      security:
        - userstore_auth:
            - write:recipients
            - read:recipients
  /donors/{donorId}:
    get:
      tags:
        - Donor
      summary: Find donor by ID
      description: Returns a single donor
      operationId: getDonorById
      parameters:
        - name: donorId
          in: path
          description: ID of donor to return
          required: true
          schema:
            type: integer
            format: int64
        - name: session_id
          in: header
          description: 'Tracks the session for the given set of requests.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Donor'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Donor'
        '400':
          description: Invalid ID supplied
        '404':
          description: Donor not found
      security:
        - api_key: []
        - userstore_auth:
            - write:donors
            - read:donors
    post:
      tags:
        - Donor
      summary: Updates a donor in the store with form data
      description: ''
      operationId: updateDonorWithForm
      parameters:
        - name: donorId
          in: path
          description: ID of donor that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Name of donor that needs to be updated
          schema:
            type: string
        - name: status
          in: query
          description: Status of donor that needs to be updated
          schema:
            type: string
        - name: session_id
          in: header
          description: 'Tracks the session for the given set of requests.'
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid input
      security:
        - userstore_auth:
            - write:donors
            - read:donors
    delete:
      tags:
        - Donor
      summary: Deletes a donor
      description: delete a donor
      operationId: deleteDonor
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: donorId
          in: path
          description: Donor id to delete
          required: true
          schema:
            type: integer
            format: int64
        - name: session_id
          in: header
          description: 'Tracks the session for the given set of requests.'
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid donor value
      security:
        - userstore_auth:
            - write:donors
            - read:donors
  /donors/tagGeneration/{donorId}:
    post:
      tags:
        - Donor
      summary: Updates a donors's tags with form data
      description: ''
      operationId: updateDonorTags
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: donorId
          in: path
          description: Donor id to generate tags for
          required: true
          schema:
            type: integer
            format: int64
        - name: query_text
          in: query
          description: A combined set of text or paragraph detailing the description to be used for tag generation
          schema:
            type: string
        - name: session_id
          in: header
          description: 'Tracks the session for the given set of requests.'
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid input
        '201':
          description: Created
  /messages:
    get:
      summary: Get all messages
      description: Retrieves all messages between donors and recipients.
      tags:
        - Messages
      parameters:
        - name: session_id
          in: header
          description: 'Tracks the session for the given set of requests.'
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of messages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        "500":
          description: Server error

    post:
      summary: Send a message
      description: Allows a donor or recipient to send a message.
      tags:
        - Messages
      parameters:
        - name: session_id
          in: header
          description: 'Tracks the session for the given set of requests.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        "201":
          description: Message sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "400":
          description: Invalid request data
        "500":
          description: Server error
  /messages/{id}:
    get:
      summary: Get a message by ID
      description: Retrieves a specific message by its ID.
      tags:
        - Messages
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: session_id
          in: header
          description: 'Tracks the session for the given set of requests.'
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Message details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "404":
          description: Message not found
        "500":
          description: Server error
  /messages/search:
    post:
      summary: Get messages between a specific donor and recipient
      description: Retrieves messages exchanged between a given donor and recipient.
      tags:
        - Messages
      parameters:
        - name: session_id
          in: header
          description: 'Tracks the session for the given set of requests.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageSearchInput'
      responses:
        "200":
          description: List of messages between donor and recipient
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        "400":
          description: Invalid request data
        "404":
          description: No messages found
        "500":
          description: Server error
  /historical_recipient_prompts:
    get:
      summary: Get all recipient prompts
      description: Retrieves all historical prompts created by recipients.
      tags:
        - Historical Recipient Prompts
      parameters:
        - name: session_id
          in: header
          description: 'Tracks the session for the given set of requests.'
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of recipient prompts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoricalRecipientPrompt'
        "500":
          description: Server error

    post:
      summary: Create a recipient prompt
      description: Stores a new historical prompt from a recipient.
      tags:
        - Historical Recipient Prompts
      parameters:
        - name: session_id
          in: header
          description: 'Tracks the session for the given set of requests.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HistoricalRecipientPrompt'
      responses:
        "201":
          description: Recipient prompt created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricalRecipientPrompt'
        "400":
          description: Invalid request data
        "500":
          description: Server error
  /historical_recipient_prompts/{recipient_id}:
    get:
      summary: Get recipient prompts by recipient ID
      description: Retrieves historical prompts for a specific recipient.
      tags:
        - Historical Recipient Prompts
      parameters:
        - name: recipient_id
          in: path
          required: true
          schema:
            type: integer
        - name: session_id
          in: header
          description: 'Tracks the session for the given set of requests.'
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of recipient's prompts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoricalRecipientPrompt'
        "404":
          description: No prompts found for the recipient
        "500":
          description: Server error
  /historical_donor_prompts:
    get:
      summary: Get all donor prompts
      description: Retrieves all historical prompts created by donors.
      tags:
        - Historical Donor Prompts
      parameters:
        - name: session_id
          in: header
          description: 'Tracks the session for the given set of requests.'
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of donor prompts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoricalDonorPrompt'
        "500":
          description: Server error

    post:
      summary: Create a donor prompt
      description: Stores a new historical prompt from a donor.
      tags:
        - Historical Donor Prompts
      parameters:
        - name: session_id
          in: header
          description: 'Tracks the session for the given set of requests.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HistoricalDonorPrompt'
      responses:
        "201":
          description: Donor prompt created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricalDonorPrompt'
        "400":
          description: Invalid request data
        "500":
          description: Server error
  /historical_donor_prompts/{donor_id}:
    get:
      summary: Get donor prompts by donor ID
      description: Retrieves historical prompts for a specific donor.
      tags:
        - Historical Donor Prompts
      parameters:
        - name: donor_id
          in: path
          required: true
          schema:
            type: integer
        - name: session_id
          in: header
          description: 'Tracks the session for the given set of requests.'
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of donor's prompts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoricalDonorPrompt'
        "404":
          description: No prompts found for the donor
        "500":
          description: Server error
components:
  schemas:
    Donation:
      type: object
      required:
        - id
        - Donor_id
        - Recipient_id
        - amount
      properties:
        id:
          type: integer
          example: 1
        donor_id:
          type: integer
          example: 101
        recipient_id:
          type: integer
          example: 202
        amount:
          type: integer
          example: 500
    Donor:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        cognito_id:
          type: string
          example: oijwedf-wrefwefr-saedf3rweg-gv
        username:
          type: string
          example: testUser
        email:
          type: string
          example: testUser
        last_quiz_text:
          type: string
          example: I like tomatoes. 
        nickname:
          type: string
          example: PotatoKing
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
      xml:
        name: donor
    Recipient:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        cognito_id:
          type: string
          example: oijwedf-wrefwefr-saedf3rweg-gv
        username:
          type: string
          example: testUser
        email:
          type: string
          example: testUser
        last_profile_text:
          type: string
          example: I like potatoes. 
        amount_received:
          type: number  
          format: double
          example: 300.15
        income_verified:
          type: boolean
          example: true
        nickname:
          type: string
          example: PotatoKing
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
      xml:
        name: recipient
    Tag:
      type: object
      properties:
        tag_name:
          type: string
          example: Potato
      xml:
        name: tag
    Message:
      type: object
      properties:
        id:
          type: integer
          example: 1
        donor_id:
          type: integer
          example: 101
        recipient_id:
          type: integer
          example: 202
        message:
          type: string
          example: "Hello, how can I help?"
        created_at:
          type: string
          format: date-time
          example: "2024-03-15T10:00:00Z"
    MessageSearchInput:
      type: object
      required:
        - donor_id
        - recipient_id
      properties:
        donor_id:
          type: integer
          example: 101
        recipient_id:
          type: integer
          example: 202
    HistoricalRecipientPrompt:
      type: object
      properties:
        id:
          type: integer
          example: 1
        recipient_id:
          type: integer
          example: 202
        prompt:
          type: string
          example: "Requesting food assistance"
        created_at:
          type: string
          format: date-time
          example: "2024-03-15T10:00:00Z"
    HistoricalDonorPrompt:
      type: object
      properties:
        id:
          type: integer
          example: 1
        donor_id:
          type: integer
          example: 101
        prompt:
          type: string
          example: "Willing to donate clothes"
        created_at:
          type: string
          format: date-time
          example: "2024-03-15T10:00:00Z"
  requestBodies:
    Recipient:
      description: Recipient object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Recipient'
        application/xml:
          schema:
            $ref: '#/components/schemas/Recipient'
  securitySchemes:
    userstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://todo.todo/oauth/authorize
          scopes:
            write:recipients: modify recipients in your account
            read:recipients: read your recipients
    api_key:
      type: apiKey
      name: api_key
      in: header