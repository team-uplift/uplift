/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.68).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.HistoricalRecipientPrompt;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2025-03-16T14:18:35.909799305Z[GMT]")
@Validated
public interface HistoricalRecipientPromptsApi {

    @Operation(summary = "Get all recipient prompts", description = "Retrieves all historical prompts created by recipients.", tags={ "Historical Recipient Prompts" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "List of recipient prompts", content = @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = HistoricalRecipientPrompt.class)))),
        
        @ApiResponse(responseCode = "500", description = "Server error") })
    @RequestMapping(value = "/historical_recipient_prompts",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<HistoricalRecipientPrompt>> historicalRecipientPromptsGet(@Parameter(in = ParameterIn.HEADER, description = "Tracks the session for the given set of requests." ,required=true,schema=@Schema()) @RequestHeader(value="session_id", required=true) String sessionId
);


    @Operation(summary = "Create a recipient prompt", description = "Stores a new historical prompt from a recipient.", tags={ "Historical Recipient Prompts" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "201", description = "Recipient prompt created successfully", content = @Content(mediaType = "application/json", schema = @Schema(implementation = HistoricalRecipientPrompt.class))),
        
        @ApiResponse(responseCode = "400", description = "Invalid request data"),
        
        @ApiResponse(responseCode = "500", description = "Server error") })
    @RequestMapping(value = "/historical_recipient_prompts",
        produces = { "application/json" }, 
        consumes = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<HistoricalRecipientPrompt> historicalRecipientPromptsPost(@Parameter(in = ParameterIn.HEADER, description = "Tracks the session for the given set of requests." ,required=true,schema=@Schema()) @RequestHeader(value="session_id", required=true) String sessionId
, @Parameter(in = ParameterIn.DEFAULT, description = "", required=true, schema=@Schema()) @Valid @RequestBody HistoricalRecipientPrompt body
);


    @Operation(summary = "Get recipient prompts by recipient ID", description = "Retrieves historical prompts for a specific recipient.", tags={ "Historical Recipient Prompts" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "List of recipient's prompts", content = @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = HistoricalRecipientPrompt.class)))),
        
        @ApiResponse(responseCode = "404", description = "No prompts found for the recipient"),
        
        @ApiResponse(responseCode = "500", description = "Server error") })
    @RequestMapping(value = "/historical_recipient_prompts/{recipient_id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<HistoricalRecipientPrompt>> historicalRecipientPromptsRecipientIdGet(@Parameter(in = ParameterIn.PATH, description = "", required=true, schema=@Schema()) @PathVariable("recipient_id") Integer recipientId
, @Parameter(in = ParameterIn.HEADER, description = "Tracks the session for the given set of requests." ,required=true,schema=@Schema()) @RequestHeader(value="session_id", required=true) String sessionId
);

}

