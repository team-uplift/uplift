import 'package:flutter/material.dart';


class RecipientProfile extends StatefulWidget {
  const RecipientProfile({super.key});

  @override
  State<RecipientProfile> createState() => _RecipientProfileState();
}


class _RecipientProfileState extends State<RecipientProfile> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Username Profile'),
      ),
      body: const SingleChildScrollView(
        padding: EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            ProfileSection(title: "Name", content: "John Doe"),
            ProfileSection(title: "Email", content: "johndoe@example.com"),
            ProfileSection(title: "About Me", content: "I'm a software developer and tech enthusiast."),
            ProfileSection(title: "Why I Need Help", content: "I am fundraising to support my education in computer science."),
            ProfileSection(title: "Verification", content: "Unverified User", showCameraButton: true,),
          ],
        ),
      ),
    );
  }
}

// reusable widget generated by chatgpt
// A reusable widget for profile sections
class ProfileSection extends StatelessWidget {
  final String title;
  final String content;
  final bool showCameraButton;

  const ProfileSection({
    super.key, 
    required this.title, 
    required this.content,
    this.showCameraButton = false,
  });

  @override
  Widget build(BuildContext context) {
    return Card(
      margin: const EdgeInsets.only(bottom: 12),
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
      elevation: 2, // Light shadow for a clean UI
      child: Padding(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(title, style: const TextStyle(fontSize: 18, fontWeight: FontWeight.bold)),
            const SizedBox(height: 8), // Space between title and text
            Text(content, style: TextStyle(fontSize: 16, color: Colors.grey[700])),
            if (showCameraButton)
              IconButton(
                onPressed: () {
                  print("Will eventually open camera");
                }, 
                icon: Icon(Icons.camera_alt, color: Colors.blue,))
          ],
        ),
      ),
    );
  }
  
}


// TODO add editing funcitonality
// TODO make camera button functional for user to take photo of documents
  // TODO maybe use just the camera roll and not allow photos to be taken?

