// test/components/recipient_list_card_test.dart
// Tests generated by ChatGPT

import 'package:flutter/material.dart';
import 'package:flutter_test/flutter_test.dart';
import 'package:go_router/go_router.dart';
import 'package:uplift/components/recipient_list_card.dart';
import 'package:uplift/models/recipient_model.dart';

void main() {
  // Notice we now set `nickname:` so the widget will render that
  final testRecipient = Recipient(
    id: 1,
    firstName: 'Testy',
    nickname: 'Testy',              // ← must supply this!
    lastAboutMe: 'I love Flutter!',
    city: 'Metropolis',
    state: 'NY',
    formQuestions: [],
  );

  testWidgets('displays recipient information correctly', (tester) async {
    await tester.pumpWidget(
      MaterialApp(
        home: Scaffold(body: RecipientListCard(recipient: testRecipient)),
      ),
    );
    await tester.pumpAndSettle();

    // Now it will find "Testy" because nickname is non-null
    expect(find.text('Testy'), findsOneWidget);
    expect(find.text('I love Flutter!'), findsOneWidget);
    expect(find.text('Metropolis, NY'), findsOneWidget);
  });

  testWidgets('navigates to detail page when tapped', (tester) async {
    // Build a GoRouter that knows about both routes:
    final router = GoRouter(
      initialLocation: '/',
      routes: [
        GoRoute(
          path: '/',
          builder: (context, state) =>
              Scaffold(body: RecipientListCard(recipient: testRecipient)),
        ),
        GoRoute(
          name: '/recipient_detail',    // ← must exactly match pushNamed()
          path: '/recipient_detail',
          builder: (context, state) =>
              const Scaffold(body: Text('Recipient Detail Page')),
        ),
      ],
    );

    await tester.pumpWidget(MaterialApp.router(routerConfig: router));
    await tester.pumpAndSettle();

    // Confirm the card is showing
    expect(find.text('Testy'), findsOneWidget);

    // Tap it to trigger context.pushNamed('/recipient_detail')
    await tester.tap(find.byType(RecipientListCard));
    await tester.pumpAndSettle();

    // Verify we arrived on the detail page
    expect(find.text('Recipient Detail Page'), findsOneWidget);
  });
}
