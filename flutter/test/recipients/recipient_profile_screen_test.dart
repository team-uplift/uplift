// test/components/recipient_profile_screen_test.dart
// Tests for RecipientProfileScreen widget (tappable behavior and data formatting)
// generated by chatgpt

import 'package:flutter/material.dart';
import 'package:flutter_test/flutter_test.dart';
import 'package:uplift/components/recipient_tag_section.dart';
import 'package:uplift/components/verify_card.dart';
import 'package:uplift/components/donor_visible_info_card.dart';
import 'package:uplift/components/question_carousel.dart';
import 'package:uplift/models/user_model.dart';
import 'package:uplift/models/recipient_model.dart';
import 'package:uplift/models/tag_model.dart';
import 'package:uplift/recipients/recipient_profile_screen.dart';

void main() {
  group('RecipientProfileScreen Widget', () {
    late User testUser;
    late Recipient testRecipient;
    late bool verifyTapped;
    final tags = [
      Tag(tagName: 'Health', weight: 0.8, createdAt: DateTime.now(), addedAt: DateTime.now(), selected: true),
      Tag(tagName: 'Education', weight: 0.5, createdAt: DateTime.now(), addedAt: DateTime.now(), selected: false),
    ];

    setUp(() {
      testRecipient = Recipient(
        id: 1,
        firstName: 'Jane',
        lastName: 'Doe',
        streetAddress1: '123 Main St',
        city: 'Testville',
        state: 'TS',
        zipCode: '12345',
        lastAboutMe: 'Hello!',
        lastReasonForHelp: 'Need help',
        formQuestions: [
          {'question': 'Q1', 'answer': 'A1'},
          {'question': 'Q2', 'answer': 'A2'},
        ],
        tags: tags,
        incomeLastVerified: null,
      );
      testUser = User(
        id: 1,
        createdAt: DateTime.now(),
        cognitoId: 'cid',
        email: 'jane@doe.com',
        recipient: true,
        recipientData: testRecipient,
      );
      verifyTapped = false;
    });

    testWidgets('renders subcomponents and calls onVerifyPressed', (tester) async {
      await tester.pumpWidget(
        MaterialApp(
          home: RecipientProfileScreen(
            profile: testUser,
            recipient: testRecipient,
            onVerifyPressed: () => verifyTapped = true,
          ),
        ),
      );
      await tester.pumpAndSettle();

      // VerifyCard should be shown (unverified)
      expect(find.byType(VerifyCard), findsOneWidget);
      await tester.tap(find.text('Verify Now'));
      await tester.pumpAndSettle();
      expect(verifyTapped, isTrue);

      // ProfileTagsSection present
      expect(find.byType(ProfileTagsSection), findsOneWidget);

      // VisibleInfoCard present
      expect(find.byType(VisibleInfoCard), findsOneWidget);

      // QuestionCarousel present
      expect(find.byType(QuestionCarousel), findsOneWidget);
    });

    
  });
}
